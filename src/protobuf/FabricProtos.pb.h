// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FabricProtos.proto

#ifndef PROTOBUF_FabricProtos_2eproto__INCLUDED
#define PROTOBUF_FabricProtos_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_FabricProtos_2eproto();
void protobuf_AssignDesc_FabricProtos_2eproto();
void protobuf_ShutdownFile_FabricProtos_2eproto();

class CommandMessage;
class FabricWrapperMessage;
class HeartbeatMessage;
class PatternCommand;
class PatternNamesMessage;
class WelcomeMessage;

enum HeartbeatMessage_MemberType {
  HeartbeatMessage_MemberType_PROTOBUF_UNKNOWN = 0,
  HeartbeatMessage_MemberType_PROTOBUF_VEST = 1,
  HeartbeatMessage_MemberType_PROTOBUF_HAT = 2,
  HeartbeatMessage_MemberType_PROTOBUF_TOWER = 3,
  HeartbeatMessage_MemberType_PROTOBUF_TOWN_CENTER = 4,
  HeartbeatMessage_MemberType_PROTOBUF_TOWER_EYE = 5,
  HeartbeatMessage_MemberType_PROTOBUF_DRESS = 6,
  HeartbeatMessage_MemberType_PROTOBUF_WINDFLOWERS = 7,
  HeartbeatMessage_MemberType_PROTOBUF_REEDS = 8,
  HeartbeatMessage_MemberType_HeartbeatMessage_MemberType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HeartbeatMessage_MemberType_HeartbeatMessage_MemberType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HeartbeatMessage_MemberType_IsValid(int value);
const HeartbeatMessage_MemberType HeartbeatMessage_MemberType_MemberType_MIN = HeartbeatMessage_MemberType_PROTOBUF_UNKNOWN;
const HeartbeatMessage_MemberType HeartbeatMessage_MemberType_MemberType_MAX = HeartbeatMessage_MemberType_PROTOBUF_REEDS;
const int HeartbeatMessage_MemberType_MemberType_ARRAYSIZE = HeartbeatMessage_MemberType_MemberType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HeartbeatMessage_MemberType_descriptor();
inline const ::std::string& HeartbeatMessage_MemberType_Name(HeartbeatMessage_MemberType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HeartbeatMessage_MemberType_descriptor(), value);
}
inline bool HeartbeatMessage_MemberType_Parse(
    const ::std::string& name, HeartbeatMessage_MemberType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HeartbeatMessage_MemberType>(
    HeartbeatMessage_MemberType_descriptor(), name, value);
}
enum CommandMessage_CommandList {
  CommandMessage_CommandList_PROTOBUF_HEARTBEAT = 0,
  CommandMessage_CommandList_PROTOBUF_PATTERN_NAMES = 1,
  CommandMessage_CommandList_PROTOBUF_PATTERN_COMMAND = 2,
  CommandMessage_CommandList_PROTOBUF_OPC_DISCONNECT = 3,
  CommandMessage_CommandList_PROTOBUF_OPC_CONNECT = 4,
  CommandMessage_CommandList_CommandMessage_CommandList_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CommandMessage_CommandList_CommandMessage_CommandList_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CommandMessage_CommandList_IsValid(int value);
const CommandMessage_CommandList CommandMessage_CommandList_CommandList_MIN = CommandMessage_CommandList_PROTOBUF_HEARTBEAT;
const CommandMessage_CommandList CommandMessage_CommandList_CommandList_MAX = CommandMessage_CommandList_PROTOBUF_OPC_CONNECT;
const int CommandMessage_CommandList_CommandList_ARRAYSIZE = CommandMessage_CommandList_CommandList_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommandMessage_CommandList_descriptor();
inline const ::std::string& CommandMessage_CommandList_Name(CommandMessage_CommandList value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommandMessage_CommandList_descriptor(), value);
}
inline bool CommandMessage_CommandList_Parse(
    const ::std::string& name, CommandMessage_CommandList* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandMessage_CommandList>(
    CommandMessage_CommandList_descriptor(), name, value);
}
// ===================================================================

class FabricWrapperMessage : public ::google::protobuf::Message {
 public:
  FabricWrapperMessage();
  virtual ~FabricWrapperMessage();

  FabricWrapperMessage(const FabricWrapperMessage& from);

  inline FabricWrapperMessage& operator=(const FabricWrapperMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FabricWrapperMessage& default_instance();

  enum MsgCase {
    kHeartbeat = 1,
    kPatternNames = 2,
    kCommand = 3,
    kWelcome = 4,
    kPatternCommand = 5,
    MSG_NOT_SET = 0,
  };

  void Swap(FabricWrapperMessage* other);

  // implements Message ----------------------------------------------

  inline FabricWrapperMessage* New() const { return New(NULL); }

  FabricWrapperMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FabricWrapperMessage& from);
  void MergeFrom(const FabricWrapperMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FabricWrapperMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .HeartbeatMessage heartbeat = 1;
  bool has_heartbeat() const;
  void clear_heartbeat();
  static const int kHeartbeatFieldNumber = 1;
  const ::HeartbeatMessage& heartbeat() const;
  ::HeartbeatMessage* mutable_heartbeat();
  ::HeartbeatMessage* release_heartbeat();
  void set_allocated_heartbeat(::HeartbeatMessage* heartbeat);

  // optional .PatternNamesMessage patternNames = 2;
  bool has_patternnames() const;
  void clear_patternnames();
  static const int kPatternNamesFieldNumber = 2;
  const ::PatternNamesMessage& patternnames() const;
  ::PatternNamesMessage* mutable_patternnames();
  ::PatternNamesMessage* release_patternnames();
  void set_allocated_patternnames(::PatternNamesMessage* patternnames);

  // optional .CommandMessage command = 3;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 3;
  const ::CommandMessage& command() const;
  ::CommandMessage* mutable_command();
  ::CommandMessage* release_command();
  void set_allocated_command(::CommandMessage* command);

  // optional .WelcomeMessage welcome = 4;
  bool has_welcome() const;
  void clear_welcome();
  static const int kWelcomeFieldNumber = 4;
  const ::WelcomeMessage& welcome() const;
  ::WelcomeMessage* mutable_welcome();
  ::WelcomeMessage* release_welcome();
  void set_allocated_welcome(::WelcomeMessage* welcome);

  // optional .PatternCommand patternCommand = 5;
  bool has_patterncommand() const;
  void clear_patterncommand();
  static const int kPatternCommandFieldNumber = 5;
  const ::PatternCommand& patterncommand() const;
  ::PatternCommand* mutable_patterncommand();
  ::PatternCommand* release_patterncommand();
  void set_allocated_patterncommand(::PatternCommand* patterncommand);

  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:FabricWrapperMessage)
 private:
  inline void set_has_heartbeat();
  inline void set_has_patternnames();
  inline void set_has_command();
  inline void set_has_welcome();
  inline void set_has_patterncommand();

  inline bool has_msg() const;
  void clear_msg();
  inline void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union MsgUnion {
    MsgUnion() {}
    ::HeartbeatMessage* heartbeat_;
    ::PatternNamesMessage* patternnames_;
    ::CommandMessage* command_;
    ::WelcomeMessage* welcome_;
    ::PatternCommand* patterncommand_;
  } msg_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_FabricProtos_2eproto();
  friend void protobuf_AssignDesc_FabricProtos_2eproto();
  friend void protobuf_ShutdownFile_FabricProtos_2eproto();

  void InitAsDefaultInstance();
  static FabricWrapperMessage* default_instance_;
};
// -------------------------------------------------------------------

class HeartbeatMessage : public ::google::protobuf::Message {
 public:
  HeartbeatMessage();
  virtual ~HeartbeatMessage();

  HeartbeatMessage(const HeartbeatMessage& from);

  inline HeartbeatMessage& operator=(const HeartbeatMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatMessage& default_instance();

  void Swap(HeartbeatMessage* other);

  // implements Message ----------------------------------------------

  inline HeartbeatMessage* New() const { return New(NULL); }

  HeartbeatMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatMessage& from);
  void MergeFrom(const HeartbeatMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeartbeatMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef HeartbeatMessage_MemberType MemberType;
  static const MemberType PROTOBUF_UNKNOWN = HeartbeatMessage_MemberType_PROTOBUF_UNKNOWN;
  static const MemberType PROTOBUF_VEST = HeartbeatMessage_MemberType_PROTOBUF_VEST;
  static const MemberType PROTOBUF_HAT = HeartbeatMessage_MemberType_PROTOBUF_HAT;
  static const MemberType PROTOBUF_TOWER = HeartbeatMessage_MemberType_PROTOBUF_TOWER;
  static const MemberType PROTOBUF_TOWN_CENTER = HeartbeatMessage_MemberType_PROTOBUF_TOWN_CENTER;
  static const MemberType PROTOBUF_TOWER_EYE = HeartbeatMessage_MemberType_PROTOBUF_TOWER_EYE;
  static const MemberType PROTOBUF_DRESS = HeartbeatMessage_MemberType_PROTOBUF_DRESS;
  static const MemberType PROTOBUF_WINDFLOWERS = HeartbeatMessage_MemberType_PROTOBUF_WINDFLOWERS;
  static const MemberType PROTOBUF_REEDS = HeartbeatMessage_MemberType_PROTOBUF_REEDS;
  static inline bool MemberType_IsValid(int value) {
    return HeartbeatMessage_MemberType_IsValid(value);
  }
  static const MemberType MemberType_MIN =
    HeartbeatMessage_MemberType_MemberType_MIN;
  static const MemberType MemberType_MAX =
    HeartbeatMessage_MemberType_MemberType_MAX;
  static const int MemberType_ARRAYSIZE =
    HeartbeatMessage_MemberType_MemberType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MemberType_descriptor() {
    return HeartbeatMessage_MemberType_descriptor();
  }
  static inline const ::std::string& MemberType_Name(MemberType value) {
    return HeartbeatMessage_MemberType_Name(value);
  }
  static inline bool MemberType_Parse(const ::std::string& name,
      MemberType* value) {
    return HeartbeatMessage_MemberType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 messageTypeID = 1;
  void clear_messagetypeid();
  static const int kMessageTypeIDFieldNumber = 1;
  ::google::protobuf::int32 messagetypeid() const;
  void set_messagetypeid(::google::protobuf::int32 value);

  // optional int32 versionID = 2;
  void clear_versionid();
  static const int kVersionIDFieldNumber = 2;
  ::google::protobuf::int32 versionid() const;
  void set_versionid(::google::protobuf::int32 value);

  // optional int32 currentPattern = 3;
  void clear_currentpattern();
  static const int kCurrentPatternFieldNumber = 3;
  ::google::protobuf::int32 currentpattern() const;
  void set_currentpattern(::google::protobuf::int32 value);

  // optional int32 red = 4;
  void clear_red();
  static const int kRedFieldNumber = 4;
  ::google::protobuf::int32 red() const;
  void set_red(::google::protobuf::int32 value);

  // optional int32 green = 5;
  void clear_green();
  static const int kGreenFieldNumber = 5;
  ::google::protobuf::int32 green() const;
  void set_green(::google::protobuf::int32 value);

  // optional int32 blue = 6;
  void clear_blue();
  static const int kBlueFieldNumber = 6;
  ::google::protobuf::int32 blue() const;
  void set_blue(::google::protobuf::int32 value);

  // optional int32 speed = 7;
  void clear_speed();
  static const int kSpeedFieldNumber = 7;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // optional int32 intensity = 8;
  void clear_intensity();
  static const int kIntensityFieldNumber = 8;
  ::google::protobuf::int32 intensity() const;
  void set_intensity(::google::protobuf::int32 value);

  // optional int32 memberType = 9;
  void clear_membertype();
  static const int kMemberTypeFieldNumber = 9;
  ::google::protobuf::int32 membertype() const;
  void set_membertype(::google::protobuf::int32 value);

  // optional string currentPatternName = 10;
  void clear_currentpatternname();
  static const int kCurrentPatternNameFieldNumber = 10;
  const ::std::string& currentpatternname() const;
  void set_currentpatternname(const ::std::string& value);
  void set_currentpatternname(const char* value);
  void set_currentpatternname(const char* value, size_t size);
  ::std::string* mutable_currentpatternname();
  ::std::string* release_currentpatternname();
  void set_allocated_currentpatternname(::std::string* currentpatternname);

  // @@protoc_insertion_point(class_scope:HeartbeatMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 messagetypeid_;
  ::google::protobuf::int32 versionid_;
  ::google::protobuf::int32 currentpattern_;
  ::google::protobuf::int32 red_;
  ::google::protobuf::int32 green_;
  ::google::protobuf::int32 blue_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 intensity_;
  ::google::protobuf::internal::ArenaStringPtr currentpatternname_;
  ::google::protobuf::int32 membertype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_FabricProtos_2eproto();
  friend void protobuf_AssignDesc_FabricProtos_2eproto();
  friend void protobuf_ShutdownFile_FabricProtos_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatMessage* default_instance_;
};
// -------------------------------------------------------------------

class PatternNamesMessage : public ::google::protobuf::Message {
 public:
  PatternNamesMessage();
  virtual ~PatternNamesMessage();

  PatternNamesMessage(const PatternNamesMessage& from);

  inline PatternNamesMessage& operator=(const PatternNamesMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PatternNamesMessage& default_instance();

  void Swap(PatternNamesMessage* other);

  // implements Message ----------------------------------------------

  inline PatternNamesMessage* New() const { return New(NULL); }

  PatternNamesMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PatternNamesMessage& from);
  void MergeFrom(const PatternNamesMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PatternNamesMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string name = 1;
  int name_size() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name(int index) const;
  ::std::string* mutable_name(int index);
  void set_name(int index, const ::std::string& value);
  void set_name(int index, const char* value);
  void set_name(int index, const char* value, size_t size);
  ::std::string* add_name();
  void add_name(const ::std::string& value);
  void add_name(const char* value);
  void add_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();

  // @@protoc_insertion_point(class_scope:PatternNamesMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_FabricProtos_2eproto();
  friend void protobuf_AssignDesc_FabricProtos_2eproto();
  friend void protobuf_ShutdownFile_FabricProtos_2eproto();

  void InitAsDefaultInstance();
  static PatternNamesMessage* default_instance_;
};
// -------------------------------------------------------------------

class PatternCommand : public ::google::protobuf::Message {
 public:
  PatternCommand();
  virtual ~PatternCommand();

  PatternCommand(const PatternCommand& from);

  inline PatternCommand& operator=(const PatternCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PatternCommand& default_instance();

  void Swap(PatternCommand* other);

  // implements Message ----------------------------------------------

  inline PatternCommand* New() const { return New(NULL); }

  PatternCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PatternCommand& from);
  void MergeFrom(const PatternCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PatternCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 patternNumber = 1;
  void clear_patternnumber();
  static const int kPatternNumberFieldNumber = 1;
  ::google::protobuf::int32 patternnumber() const;
  void set_patternnumber(::google::protobuf::int32 value);

  // optional int32 speed = 2;
  void clear_speed();
  static const int kSpeedFieldNumber = 2;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // optional int32 intensity = 3;
  void clear_intensity();
  static const int kIntensityFieldNumber = 3;
  ::google::protobuf::int32 intensity() const;
  void set_intensity(::google::protobuf::int32 value);

  // optional int32 red = 4;
  void clear_red();
  static const int kRedFieldNumber = 4;
  ::google::protobuf::int32 red() const;
  void set_red(::google::protobuf::int32 value);

  // optional int32 green = 5;
  void clear_green();
  static const int kGreenFieldNumber = 5;
  ::google::protobuf::int32 green() const;
  void set_green(::google::protobuf::int32 value);

  // optional int32 blue = 6;
  void clear_blue();
  static const int kBlueFieldNumber = 6;
  ::google::protobuf::int32 blue() const;
  void set_blue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PatternCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 patternnumber_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 intensity_;
  ::google::protobuf::int32 red_;
  ::google::protobuf::int32 green_;
  ::google::protobuf::int32 blue_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_FabricProtos_2eproto();
  friend void protobuf_AssignDesc_FabricProtos_2eproto();
  friend void protobuf_ShutdownFile_FabricProtos_2eproto();

  void InitAsDefaultInstance();
  static PatternCommand* default_instance_;
};
// -------------------------------------------------------------------

class CommandMessage : public ::google::protobuf::Message {
 public:
  CommandMessage();
  virtual ~CommandMessage();

  CommandMessage(const CommandMessage& from);

  inline CommandMessage& operator=(const CommandMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandMessage& default_instance();

  void Swap(CommandMessage* other);

  // implements Message ----------------------------------------------

  inline CommandMessage* New() const { return New(NULL); }

  CommandMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommandMessage& from);
  void MergeFrom(const CommandMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CommandMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CommandMessage_CommandList CommandList;
  static const CommandList PROTOBUF_HEARTBEAT = CommandMessage_CommandList_PROTOBUF_HEARTBEAT;
  static const CommandList PROTOBUF_PATTERN_NAMES = CommandMessage_CommandList_PROTOBUF_PATTERN_NAMES;
  static const CommandList PROTOBUF_PATTERN_COMMAND = CommandMessage_CommandList_PROTOBUF_PATTERN_COMMAND;
  static const CommandList PROTOBUF_OPC_DISCONNECT = CommandMessage_CommandList_PROTOBUF_OPC_DISCONNECT;
  static const CommandList PROTOBUF_OPC_CONNECT = CommandMessage_CommandList_PROTOBUF_OPC_CONNECT;
  static inline bool CommandList_IsValid(int value) {
    return CommandMessage_CommandList_IsValid(value);
  }
  static const CommandList CommandList_MIN =
    CommandMessage_CommandList_CommandList_MIN;
  static const CommandList CommandList_MAX =
    CommandMessage_CommandList_CommandList_MAX;
  static const int CommandList_ARRAYSIZE =
    CommandMessage_CommandList_CommandList_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CommandList_descriptor() {
    return CommandMessage_CommandList_descriptor();
  }
  static inline const ::std::string& CommandList_Name(CommandList value) {
    return CommandMessage_CommandList_Name(value);
  }
  static inline bool CommandList_Parse(const ::std::string& name,
      CommandList* value) {
    return CommandMessage_CommandList_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CommandMessage.CommandList command = 1;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  ::CommandMessage_CommandList command() const;
  void set_command(::CommandMessage_CommandList value);

  // optional .PatternCommand patternCommand = 2;
  bool has_patterncommand() const;
  void clear_patterncommand();
  static const int kPatternCommandFieldNumber = 2;
  const ::PatternCommand& patterncommand() const;
  ::PatternCommand* mutable_patterncommand();
  ::PatternCommand* release_patterncommand();
  void set_allocated_patterncommand(::PatternCommand* patterncommand);

  // @@protoc_insertion_point(class_scope:CommandMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::PatternCommand* patterncommand_;
  int command_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_FabricProtos_2eproto();
  friend void protobuf_AssignDesc_FabricProtos_2eproto();
  friend void protobuf_ShutdownFile_FabricProtos_2eproto();

  void InitAsDefaultInstance();
  static CommandMessage* default_instance_;
};
// -------------------------------------------------------------------

class WelcomeMessage : public ::google::protobuf::Message {
 public:
  WelcomeMessage();
  virtual ~WelcomeMessage();

  WelcomeMessage(const WelcomeMessage& from);

  inline WelcomeMessage& operator=(const WelcomeMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelcomeMessage& default_instance();

  void Swap(WelcomeMessage* other);

  // implements Message ----------------------------------------------

  inline WelcomeMessage* New() const { return New(NULL); }

  WelcomeMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelcomeMessage& from);
  void MergeFrom(const WelcomeMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WelcomeMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string buildTime = 1;
  void clear_buildtime();
  static const int kBuildTimeFieldNumber = 1;
  const ::std::string& buildtime() const;
  void set_buildtime(const ::std::string& value);
  void set_buildtime(const char* value);
  void set_buildtime(const char* value, size_t size);
  ::std::string* mutable_buildtime();
  ::std::string* release_buildtime();
  void set_allocated_buildtime(::std::string* buildtime);

  // optional string version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // @@protoc_insertion_point(class_scope:WelcomeMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buildtime_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_FabricProtos_2eproto();
  friend void protobuf_AssignDesc_FabricProtos_2eproto();
  friend void protobuf_ShutdownFile_FabricProtos_2eproto();

  void InitAsDefaultInstance();
  static WelcomeMessage* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// FabricWrapperMessage

// optional .HeartbeatMessage heartbeat = 1;
inline bool FabricWrapperMessage::has_heartbeat() const {
  return msg_case() == kHeartbeat;
}
inline void FabricWrapperMessage::set_has_heartbeat() {
  _oneof_case_[0] = kHeartbeat;
}
inline void FabricWrapperMessage::clear_heartbeat() {
  if (has_heartbeat()) {
    delete msg_.heartbeat_;
    clear_has_msg();
  }
}
inline  const ::HeartbeatMessage& FabricWrapperMessage::heartbeat() const {
  // @@protoc_insertion_point(field_get:FabricWrapperMessage.heartbeat)
  return has_heartbeat()
      ? *msg_.heartbeat_
      : ::HeartbeatMessage::default_instance();
}
inline ::HeartbeatMessage* FabricWrapperMessage::mutable_heartbeat() {
  if (!has_heartbeat()) {
    clear_msg();
    set_has_heartbeat();
    msg_.heartbeat_ = new ::HeartbeatMessage;
  }
  // @@protoc_insertion_point(field_mutable:FabricWrapperMessage.heartbeat)
  return msg_.heartbeat_;
}
inline ::HeartbeatMessage* FabricWrapperMessage::release_heartbeat() {
  if (has_heartbeat()) {
    clear_has_msg();
    ::HeartbeatMessage* temp = msg_.heartbeat_;
    msg_.heartbeat_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void FabricWrapperMessage::set_allocated_heartbeat(::HeartbeatMessage* heartbeat) {
  clear_msg();
  if (heartbeat) {
    set_has_heartbeat();
    msg_.heartbeat_ = heartbeat;
  }
  // @@protoc_insertion_point(field_set_allocated:FabricWrapperMessage.heartbeat)
}

// optional .PatternNamesMessage patternNames = 2;
inline bool FabricWrapperMessage::has_patternnames() const {
  return msg_case() == kPatternNames;
}
inline void FabricWrapperMessage::set_has_patternnames() {
  _oneof_case_[0] = kPatternNames;
}
inline void FabricWrapperMessage::clear_patternnames() {
  if (has_patternnames()) {
    delete msg_.patternnames_;
    clear_has_msg();
  }
}
inline  const ::PatternNamesMessage& FabricWrapperMessage::patternnames() const {
  // @@protoc_insertion_point(field_get:FabricWrapperMessage.patternNames)
  return has_patternnames()
      ? *msg_.patternnames_
      : ::PatternNamesMessage::default_instance();
}
inline ::PatternNamesMessage* FabricWrapperMessage::mutable_patternnames() {
  if (!has_patternnames()) {
    clear_msg();
    set_has_patternnames();
    msg_.patternnames_ = new ::PatternNamesMessage;
  }
  // @@protoc_insertion_point(field_mutable:FabricWrapperMessage.patternNames)
  return msg_.patternnames_;
}
inline ::PatternNamesMessage* FabricWrapperMessage::release_patternnames() {
  if (has_patternnames()) {
    clear_has_msg();
    ::PatternNamesMessage* temp = msg_.patternnames_;
    msg_.patternnames_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void FabricWrapperMessage::set_allocated_patternnames(::PatternNamesMessage* patternnames) {
  clear_msg();
  if (patternnames) {
    set_has_patternnames();
    msg_.patternnames_ = patternnames;
  }
  // @@protoc_insertion_point(field_set_allocated:FabricWrapperMessage.patternNames)
}

// optional .CommandMessage command = 3;
inline bool FabricWrapperMessage::has_command() const {
  return msg_case() == kCommand;
}
inline void FabricWrapperMessage::set_has_command() {
  _oneof_case_[0] = kCommand;
}
inline void FabricWrapperMessage::clear_command() {
  if (has_command()) {
    delete msg_.command_;
    clear_has_msg();
  }
}
inline  const ::CommandMessage& FabricWrapperMessage::command() const {
  // @@protoc_insertion_point(field_get:FabricWrapperMessage.command)
  return has_command()
      ? *msg_.command_
      : ::CommandMessage::default_instance();
}
inline ::CommandMessage* FabricWrapperMessage::mutable_command() {
  if (!has_command()) {
    clear_msg();
    set_has_command();
    msg_.command_ = new ::CommandMessage;
  }
  // @@protoc_insertion_point(field_mutable:FabricWrapperMessage.command)
  return msg_.command_;
}
inline ::CommandMessage* FabricWrapperMessage::release_command() {
  if (has_command()) {
    clear_has_msg();
    ::CommandMessage* temp = msg_.command_;
    msg_.command_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void FabricWrapperMessage::set_allocated_command(::CommandMessage* command) {
  clear_msg();
  if (command) {
    set_has_command();
    msg_.command_ = command;
  }
  // @@protoc_insertion_point(field_set_allocated:FabricWrapperMessage.command)
}

// optional .WelcomeMessage welcome = 4;
inline bool FabricWrapperMessage::has_welcome() const {
  return msg_case() == kWelcome;
}
inline void FabricWrapperMessage::set_has_welcome() {
  _oneof_case_[0] = kWelcome;
}
inline void FabricWrapperMessage::clear_welcome() {
  if (has_welcome()) {
    delete msg_.welcome_;
    clear_has_msg();
  }
}
inline  const ::WelcomeMessage& FabricWrapperMessage::welcome() const {
  // @@protoc_insertion_point(field_get:FabricWrapperMessage.welcome)
  return has_welcome()
      ? *msg_.welcome_
      : ::WelcomeMessage::default_instance();
}
inline ::WelcomeMessage* FabricWrapperMessage::mutable_welcome() {
  if (!has_welcome()) {
    clear_msg();
    set_has_welcome();
    msg_.welcome_ = new ::WelcomeMessage;
  }
  // @@protoc_insertion_point(field_mutable:FabricWrapperMessage.welcome)
  return msg_.welcome_;
}
inline ::WelcomeMessage* FabricWrapperMessage::release_welcome() {
  if (has_welcome()) {
    clear_has_msg();
    ::WelcomeMessage* temp = msg_.welcome_;
    msg_.welcome_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void FabricWrapperMessage::set_allocated_welcome(::WelcomeMessage* welcome) {
  clear_msg();
  if (welcome) {
    set_has_welcome();
    msg_.welcome_ = welcome;
  }
  // @@protoc_insertion_point(field_set_allocated:FabricWrapperMessage.welcome)
}

// optional .PatternCommand patternCommand = 5;
inline bool FabricWrapperMessage::has_patterncommand() const {
  return msg_case() == kPatternCommand;
}
inline void FabricWrapperMessage::set_has_patterncommand() {
  _oneof_case_[0] = kPatternCommand;
}
inline void FabricWrapperMessage::clear_patterncommand() {
  if (has_patterncommand()) {
    delete msg_.patterncommand_;
    clear_has_msg();
  }
}
inline  const ::PatternCommand& FabricWrapperMessage::patterncommand() const {
  // @@protoc_insertion_point(field_get:FabricWrapperMessage.patternCommand)
  return has_patterncommand()
      ? *msg_.patterncommand_
      : ::PatternCommand::default_instance();
}
inline ::PatternCommand* FabricWrapperMessage::mutable_patterncommand() {
  if (!has_patterncommand()) {
    clear_msg();
    set_has_patterncommand();
    msg_.patterncommand_ = new ::PatternCommand;
  }
  // @@protoc_insertion_point(field_mutable:FabricWrapperMessage.patternCommand)
  return msg_.patterncommand_;
}
inline ::PatternCommand* FabricWrapperMessage::release_patterncommand() {
  if (has_patterncommand()) {
    clear_has_msg();
    ::PatternCommand* temp = msg_.patterncommand_;
    msg_.patterncommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void FabricWrapperMessage::set_allocated_patterncommand(::PatternCommand* patterncommand) {
  clear_msg();
  if (patterncommand) {
    set_has_patterncommand();
    msg_.patterncommand_ = patterncommand;
  }
  // @@protoc_insertion_point(field_set_allocated:FabricWrapperMessage.patternCommand)
}

inline bool FabricWrapperMessage::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void FabricWrapperMessage::clear_has_msg() {
  _oneof_case_[0] = MSG_NOT_SET;
}
inline FabricWrapperMessage::MsgCase FabricWrapperMessage::msg_case() const {
  return FabricWrapperMessage::MsgCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// HeartbeatMessage

// optional int32 messageTypeID = 1;
inline void HeartbeatMessage::clear_messagetypeid() {
  messagetypeid_ = 0;
}
inline ::google::protobuf::int32 HeartbeatMessage::messagetypeid() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.messageTypeID)
  return messagetypeid_;
}
inline void HeartbeatMessage::set_messagetypeid(::google::protobuf::int32 value) {
  
  messagetypeid_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.messageTypeID)
}

// optional int32 versionID = 2;
inline void HeartbeatMessage::clear_versionid() {
  versionid_ = 0;
}
inline ::google::protobuf::int32 HeartbeatMessage::versionid() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.versionID)
  return versionid_;
}
inline void HeartbeatMessage::set_versionid(::google::protobuf::int32 value) {
  
  versionid_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.versionID)
}

// optional int32 currentPattern = 3;
inline void HeartbeatMessage::clear_currentpattern() {
  currentpattern_ = 0;
}
inline ::google::protobuf::int32 HeartbeatMessage::currentpattern() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.currentPattern)
  return currentpattern_;
}
inline void HeartbeatMessage::set_currentpattern(::google::protobuf::int32 value) {
  
  currentpattern_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.currentPattern)
}

// optional int32 red = 4;
inline void HeartbeatMessage::clear_red() {
  red_ = 0;
}
inline ::google::protobuf::int32 HeartbeatMessage::red() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.red)
  return red_;
}
inline void HeartbeatMessage::set_red(::google::protobuf::int32 value) {
  
  red_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.red)
}

// optional int32 green = 5;
inline void HeartbeatMessage::clear_green() {
  green_ = 0;
}
inline ::google::protobuf::int32 HeartbeatMessage::green() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.green)
  return green_;
}
inline void HeartbeatMessage::set_green(::google::protobuf::int32 value) {
  
  green_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.green)
}

// optional int32 blue = 6;
inline void HeartbeatMessage::clear_blue() {
  blue_ = 0;
}
inline ::google::protobuf::int32 HeartbeatMessage::blue() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.blue)
  return blue_;
}
inline void HeartbeatMessage::set_blue(::google::protobuf::int32 value) {
  
  blue_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.blue)
}

// optional int32 speed = 7;
inline void HeartbeatMessage::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 HeartbeatMessage::speed() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.speed)
  return speed_;
}
inline void HeartbeatMessage::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.speed)
}

// optional int32 intensity = 8;
inline void HeartbeatMessage::clear_intensity() {
  intensity_ = 0;
}
inline ::google::protobuf::int32 HeartbeatMessage::intensity() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.intensity)
  return intensity_;
}
inline void HeartbeatMessage::set_intensity(::google::protobuf::int32 value) {
  
  intensity_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.intensity)
}

// optional int32 memberType = 9;
inline void HeartbeatMessage::clear_membertype() {
  membertype_ = 0;
}
inline ::google::protobuf::int32 HeartbeatMessage::membertype() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.memberType)
  return membertype_;
}
inline void HeartbeatMessage::set_membertype(::google::protobuf::int32 value) {
  
  membertype_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.memberType)
}

// optional string currentPatternName = 10;
inline void HeartbeatMessage::clear_currentpatternname() {
  currentpatternname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HeartbeatMessage::currentpatternname() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.currentPatternName)
  return currentpatternname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartbeatMessage::set_currentpatternname(const ::std::string& value) {
  
  currentpatternname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HeartbeatMessage.currentPatternName)
}
inline void HeartbeatMessage::set_currentpatternname(const char* value) {
  
  currentpatternname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HeartbeatMessage.currentPatternName)
}
inline void HeartbeatMessage::set_currentpatternname(const char* value, size_t size) {
  
  currentpatternname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HeartbeatMessage.currentPatternName)
}
inline ::std::string* HeartbeatMessage::mutable_currentpatternname() {
  
  // @@protoc_insertion_point(field_mutable:HeartbeatMessage.currentPatternName)
  return currentpatternname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeartbeatMessage::release_currentpatternname() {
  
  return currentpatternname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeartbeatMessage::set_allocated_currentpatternname(::std::string* currentpatternname) {
  if (currentpatternname != NULL) {
    
  } else {
    
  }
  currentpatternname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currentpatternname);
  // @@protoc_insertion_point(field_set_allocated:HeartbeatMessage.currentPatternName)
}

// -------------------------------------------------------------------

// PatternNamesMessage

// repeated string name = 1;
inline int PatternNamesMessage::name_size() const {
  return name_.size();
}
inline void PatternNamesMessage::clear_name() {
  name_.Clear();
}
inline const ::std::string& PatternNamesMessage::name(int index) const {
  // @@protoc_insertion_point(field_get:PatternNamesMessage.name)
  return name_.Get(index);
}
inline ::std::string* PatternNamesMessage::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:PatternNamesMessage.name)
  return name_.Mutable(index);
}
inline void PatternNamesMessage::set_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PatternNamesMessage.name)
  name_.Mutable(index)->assign(value);
}
inline void PatternNamesMessage::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PatternNamesMessage.name)
}
inline void PatternNamesMessage::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PatternNamesMessage.name)
}
inline ::std::string* PatternNamesMessage::add_name() {
  return name_.Add();
}
inline void PatternNamesMessage::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PatternNamesMessage.name)
}
inline void PatternNamesMessage::add_name(const char* value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PatternNamesMessage.name)
}
inline void PatternNamesMessage::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PatternNamesMessage.name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PatternNamesMessage::name() const {
  // @@protoc_insertion_point(field_list:PatternNamesMessage.name)
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PatternNamesMessage::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:PatternNamesMessage.name)
  return &name_;
}

// -------------------------------------------------------------------

// PatternCommand

// optional int32 patternNumber = 1;
inline void PatternCommand::clear_patternnumber() {
  patternnumber_ = 0;
}
inline ::google::protobuf::int32 PatternCommand::patternnumber() const {
  // @@protoc_insertion_point(field_get:PatternCommand.patternNumber)
  return patternnumber_;
}
inline void PatternCommand::set_patternnumber(::google::protobuf::int32 value) {
  
  patternnumber_ = value;
  // @@protoc_insertion_point(field_set:PatternCommand.patternNumber)
}

// optional int32 speed = 2;
inline void PatternCommand::clear_speed() {
  speed_ = 0;
}
inline ::google::protobuf::int32 PatternCommand::speed() const {
  // @@protoc_insertion_point(field_get:PatternCommand.speed)
  return speed_;
}
inline void PatternCommand::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:PatternCommand.speed)
}

// optional int32 intensity = 3;
inline void PatternCommand::clear_intensity() {
  intensity_ = 0;
}
inline ::google::protobuf::int32 PatternCommand::intensity() const {
  // @@protoc_insertion_point(field_get:PatternCommand.intensity)
  return intensity_;
}
inline void PatternCommand::set_intensity(::google::protobuf::int32 value) {
  
  intensity_ = value;
  // @@protoc_insertion_point(field_set:PatternCommand.intensity)
}

// optional int32 red = 4;
inline void PatternCommand::clear_red() {
  red_ = 0;
}
inline ::google::protobuf::int32 PatternCommand::red() const {
  // @@protoc_insertion_point(field_get:PatternCommand.red)
  return red_;
}
inline void PatternCommand::set_red(::google::protobuf::int32 value) {
  
  red_ = value;
  // @@protoc_insertion_point(field_set:PatternCommand.red)
}

// optional int32 green = 5;
inline void PatternCommand::clear_green() {
  green_ = 0;
}
inline ::google::protobuf::int32 PatternCommand::green() const {
  // @@protoc_insertion_point(field_get:PatternCommand.green)
  return green_;
}
inline void PatternCommand::set_green(::google::protobuf::int32 value) {
  
  green_ = value;
  // @@protoc_insertion_point(field_set:PatternCommand.green)
}

// optional int32 blue = 6;
inline void PatternCommand::clear_blue() {
  blue_ = 0;
}
inline ::google::protobuf::int32 PatternCommand::blue() const {
  // @@protoc_insertion_point(field_get:PatternCommand.blue)
  return blue_;
}
inline void PatternCommand::set_blue(::google::protobuf::int32 value) {
  
  blue_ = value;
  // @@protoc_insertion_point(field_set:PatternCommand.blue)
}

// -------------------------------------------------------------------

// CommandMessage

// optional .CommandMessage.CommandList command = 1;
inline void CommandMessage::clear_command() {
  command_ = 0;
}
inline ::CommandMessage_CommandList CommandMessage::command() const {
  // @@protoc_insertion_point(field_get:CommandMessage.command)
  return static_cast< ::CommandMessage_CommandList >(command_);
}
inline void CommandMessage::set_command(::CommandMessage_CommandList value) {
  
  command_ = value;
  // @@protoc_insertion_point(field_set:CommandMessage.command)
}

// optional .PatternCommand patternCommand = 2;
inline bool CommandMessage::has_patterncommand() const {
  return !_is_default_instance_ && patterncommand_ != NULL;
}
inline void CommandMessage::clear_patterncommand() {
  if (GetArenaNoVirtual() == NULL && patterncommand_ != NULL) delete patterncommand_;
  patterncommand_ = NULL;
}
inline const ::PatternCommand& CommandMessage::patterncommand() const {
  // @@protoc_insertion_point(field_get:CommandMessage.patternCommand)
  return patterncommand_ != NULL ? *patterncommand_ : *default_instance_->patterncommand_;
}
inline ::PatternCommand* CommandMessage::mutable_patterncommand() {
  
  if (patterncommand_ == NULL) {
    patterncommand_ = new ::PatternCommand;
  }
  // @@protoc_insertion_point(field_mutable:CommandMessage.patternCommand)
  return patterncommand_;
}
inline ::PatternCommand* CommandMessage::release_patterncommand() {
  
  ::PatternCommand* temp = patterncommand_;
  patterncommand_ = NULL;
  return temp;
}
inline void CommandMessage::set_allocated_patterncommand(::PatternCommand* patterncommand) {
  delete patterncommand_;
  patterncommand_ = patterncommand;
  if (patterncommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CommandMessage.patternCommand)
}

// -------------------------------------------------------------------

// WelcomeMessage

// optional string buildTime = 1;
inline void WelcomeMessage::clear_buildtime() {
  buildtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WelcomeMessage::buildtime() const {
  // @@protoc_insertion_point(field_get:WelcomeMessage.buildTime)
  return buildtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WelcomeMessage::set_buildtime(const ::std::string& value) {
  
  buildtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WelcomeMessage.buildTime)
}
inline void WelcomeMessage::set_buildtime(const char* value) {
  
  buildtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WelcomeMessage.buildTime)
}
inline void WelcomeMessage::set_buildtime(const char* value, size_t size) {
  
  buildtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WelcomeMessage.buildTime)
}
inline ::std::string* WelcomeMessage::mutable_buildtime() {
  
  // @@protoc_insertion_point(field_mutable:WelcomeMessage.buildTime)
  return buildtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WelcomeMessage::release_buildtime() {
  
  return buildtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WelcomeMessage::set_allocated_buildtime(::std::string* buildtime) {
  if (buildtime != NULL) {
    
  } else {
    
  }
  buildtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buildtime);
  // @@protoc_insertion_point(field_set_allocated:WelcomeMessage.buildTime)
}

// optional string version = 2;
inline void WelcomeMessage::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WelcomeMessage::version() const {
  // @@protoc_insertion_point(field_get:WelcomeMessage.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WelcomeMessage::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WelcomeMessage.version)
}
inline void WelcomeMessage::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WelcomeMessage.version)
}
inline void WelcomeMessage::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WelcomeMessage.version)
}
inline ::std::string* WelcomeMessage::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:WelcomeMessage.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WelcomeMessage::release_version() {
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WelcomeMessage::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:WelcomeMessage.version)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::HeartbeatMessage_MemberType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HeartbeatMessage_MemberType>() {
  return ::HeartbeatMessage_MemberType_descriptor();
}
template <> struct is_proto_enum< ::CommandMessage_CommandList> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CommandMessage_CommandList>() {
  return ::CommandMessage_CommandList_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FabricProtos_2eproto__INCLUDED
