// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FabricProtos.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "FabricProtos.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* FabricWrapperMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FabricWrapperMessage_reflection_ = NULL;
struct FabricWrapperMessageOneofInstance {
  const ::HeartbeatMessage* heartbeat_;
  const ::PatternNamesMessage* patternnames_;
  const ::CommandMessage* command_;
  const ::WelcomeMessage* welcome_;
  const ::PatternCommand* patterncommand_;
}* FabricWrapperMessage_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* HeartbeatMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartbeatMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* HeartbeatMessage_MemberType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PatternNamesMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PatternNamesMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* PatternCommand_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PatternCommand_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommandMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommandMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CommandMessage_CommandList_descriptor_ = NULL;
const ::google::protobuf::Descriptor* WelcomeMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelcomeMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_FabricProtos_2eproto() {
  protobuf_AddDesc_FabricProtos_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "FabricProtos.proto");
  GOOGLE_CHECK(file != NULL);
  FabricWrapperMessage_descriptor_ = file->message_type(0);
  static const int FabricWrapperMessage_offsets_[6] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(FabricWrapperMessage_default_oneof_instance_, heartbeat_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(FabricWrapperMessage_default_oneof_instance_, patternnames_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(FabricWrapperMessage_default_oneof_instance_, command_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(FabricWrapperMessage_default_oneof_instance_, welcome_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(FabricWrapperMessage_default_oneof_instance_, patterncommand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FabricWrapperMessage, msg_),
  };
  FabricWrapperMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FabricWrapperMessage_descriptor_,
      FabricWrapperMessage::default_instance_,
      FabricWrapperMessage_offsets_,
      -1,
      -1,
      -1,
      FabricWrapperMessage_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FabricWrapperMessage, _oneof_case_[0]),
      sizeof(FabricWrapperMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FabricWrapperMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FabricWrapperMessage, _is_default_instance_));
  HeartbeatMessage_descriptor_ = file->message_type(1);
  static const int HeartbeatMessage_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, messagetypeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, versionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, currentpattern_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, red_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, green_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, blue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, intensity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, membertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, currentpatternname_),
  };
  HeartbeatMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeartbeatMessage_descriptor_,
      HeartbeatMessage::default_instance_,
      HeartbeatMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(HeartbeatMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, _is_default_instance_));
  HeartbeatMessage_MemberType_descriptor_ = HeartbeatMessage_descriptor_->enum_type(0);
  PatternNamesMessage_descriptor_ = file->message_type(2);
  static const int PatternNamesMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternNamesMessage, name_),
  };
  PatternNamesMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PatternNamesMessage_descriptor_,
      PatternNamesMessage::default_instance_,
      PatternNamesMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(PatternNamesMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternNamesMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternNamesMessage, _is_default_instance_));
  PatternCommand_descriptor_ = file->message_type(3);
  static const int PatternCommand_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternCommand, patternnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternCommand, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternCommand, intensity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternCommand, red_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternCommand, green_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternCommand, blue_),
  };
  PatternCommand_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PatternCommand_descriptor_,
      PatternCommand::default_instance_,
      PatternCommand_offsets_,
      -1,
      -1,
      -1,
      sizeof(PatternCommand),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternCommand, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PatternCommand, _is_default_instance_));
  CommandMessage_descriptor_ = file->message_type(4);
  static const int CommandMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, patterncommand_),
  };
  CommandMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommandMessage_descriptor_,
      CommandMessage::default_instance_,
      CommandMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(CommandMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, _is_default_instance_));
  CommandMessage_CommandList_descriptor_ = CommandMessage_descriptor_->enum_type(0);
  WelcomeMessage_descriptor_ = file->message_type(5);
  static const int WelcomeMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelcomeMessage, buildtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelcomeMessage, version_),
  };
  WelcomeMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WelcomeMessage_descriptor_,
      WelcomeMessage::default_instance_,
      WelcomeMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(WelcomeMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelcomeMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelcomeMessage, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_FabricProtos_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FabricWrapperMessage_descriptor_, &FabricWrapperMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeartbeatMessage_descriptor_, &HeartbeatMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PatternNamesMessage_descriptor_, &PatternNamesMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PatternCommand_descriptor_, &PatternCommand::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommandMessage_descriptor_, &CommandMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WelcomeMessage_descriptor_, &WelcomeMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_FabricProtos_2eproto() {
  delete FabricWrapperMessage::default_instance_;
  delete FabricWrapperMessage_default_oneof_instance_;
  delete FabricWrapperMessage_reflection_;
  delete HeartbeatMessage::default_instance_;
  delete HeartbeatMessage_reflection_;
  delete PatternNamesMessage::default_instance_;
  delete PatternNamesMessage_reflection_;
  delete PatternCommand::default_instance_;
  delete PatternCommand_reflection_;
  delete CommandMessage::default_instance_;
  delete CommandMessage_reflection_;
  delete WelcomeMessage::default_instance_;
  delete WelcomeMessage_reflection_;
}

void protobuf_AddDesc_FabricProtos_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022FabricProtos.proto\"\346\001\n\024FabricWrapperMe"
    "ssage\022&\n\theartbeat\030\001 \001(\0132\021.HeartbeatMess"
    "ageH\000\022,\n\014patternNames\030\002 \001(\0132\024.PatternNam"
    "esMessageH\000\022\"\n\007command\030\003 \001(\0132\017.CommandMe"
    "ssageH\000\022\"\n\007welcome\030\004 \001(\0132\017.WelcomeMessag"
    "eH\000\022)\n\016patternCommand\030\005 \001(\0132\017.PatternCom"
    "mandH\000B\005\n\003msg\"\242\003\n\020HeartbeatMessage\022\025\n\rme"
    "ssageTypeID\030\001 \001(\005\022\021\n\tversionID\030\002 \001(\005\022\026\n\016"
    "currentPattern\030\003 \001(\005\022\013\n\003red\030\004 \001(\005\022\r\n\005gre"
    "en\030\005 \001(\005\022\014\n\004blue\030\006 \001(\005\022\r\n\005speed\030\007 \001(\005\022\021\n"
    "\tintensity\030\010 \001(\005\022\022\n\nmemberType\030\t \001(\005\022\032\n\022"
    "currentPatternName\030\n \001(\t\"\317\001\n\nMemberType\022"
    "\024\n\020PROTOBUF_UNKNOWN\020\000\022\021\n\rPROTOBUF_VEST\020\001"
    "\022\020\n\014PROTOBUF_HAT\020\002\022\022\n\016PROTOBUF_TOWER\020\003\022\030"
    "\n\024PROTOBUF_TOWN_CENTER\020\004\022\026\n\022PROTOBUF_TOW"
    "ER_EYE\020\005\022\022\n\016PROTOBUF_DRESS\020\006\022\030\n\024PROTOBUF"
    "_WINDFLOWERS\020\007\022\022\n\016PROTOBUF_REEDS\020\010\"#\n\023Pa"
    "tternNamesMessage\022\014\n\004name\030\001 \003(\t\"s\n\016Patte"
    "rnCommand\022\025\n\rpatternNumber\030\001 \001(\005\022\r\n\005spee"
    "d\030\002 \001(\005\022\021\n\tintensity\030\003 \001(\005\022\013\n\003red\030\004 \001(\005\022"
    "\r\n\005green\030\005 \001(\005\022\014\n\004blue\030\006 \001(\005\"\310\001\n\016Command"
    "Message\022,\n\007command\030\001 \001(\0162\033.CommandMessag"
    "e.CommandList\022\'\n\016patternCommand\030\002 \001(\0132\017."
    "PatternCommand\"_\n\013CommandList\022\026\n\022PROTOBU"
    "F_HEARTBEAT\020\000\022\032\n\026PROTOBUF_PATTERN_NAMES\020"
    "\001\022\034\n\030PROTOBUF_PATTERN_COMMAND\020\002\"4\n\016Welco"
    "meMessage\022\021\n\tbuildTime\030\001 \001(\t\022\017\n\007version\030"
    "\002 \001(\tB9\n)com._338oaklandcreations.fabric"
    ".machineryB\014FabricProtosb\006proto3", 1152);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FabricProtos.proto", &protobuf_RegisterTypes);
  FabricWrapperMessage::default_instance_ = new FabricWrapperMessage();
  FabricWrapperMessage_default_oneof_instance_ = new FabricWrapperMessageOneofInstance();
  HeartbeatMessage::default_instance_ = new HeartbeatMessage();
  PatternNamesMessage::default_instance_ = new PatternNamesMessage();
  PatternCommand::default_instance_ = new PatternCommand();
  CommandMessage::default_instance_ = new CommandMessage();
  WelcomeMessage::default_instance_ = new WelcomeMessage();
  FabricWrapperMessage::default_instance_->InitAsDefaultInstance();
  HeartbeatMessage::default_instance_->InitAsDefaultInstance();
  PatternNamesMessage::default_instance_->InitAsDefaultInstance();
  PatternCommand::default_instance_->InitAsDefaultInstance();
  CommandMessage::default_instance_->InitAsDefaultInstance();
  WelcomeMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_FabricProtos_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_FabricProtos_2eproto {
  StaticDescriptorInitializer_FabricProtos_2eproto() {
    protobuf_AddDesc_FabricProtos_2eproto();
  }
} static_descriptor_initializer_FabricProtos_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FabricWrapperMessage::kHeartbeatFieldNumber;
const int FabricWrapperMessage::kPatternNamesFieldNumber;
const int FabricWrapperMessage::kCommandFieldNumber;
const int FabricWrapperMessage::kWelcomeFieldNumber;
const int FabricWrapperMessage::kPatternCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FabricWrapperMessage::FabricWrapperMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FabricWrapperMessage)
}

void FabricWrapperMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  FabricWrapperMessage_default_oneof_instance_->heartbeat_ = const_cast< ::HeartbeatMessage*>(&::HeartbeatMessage::default_instance());
  FabricWrapperMessage_default_oneof_instance_->patternnames_ = const_cast< ::PatternNamesMessage*>(&::PatternNamesMessage::default_instance());
  FabricWrapperMessage_default_oneof_instance_->command_ = const_cast< ::CommandMessage*>(&::CommandMessage::default_instance());
  FabricWrapperMessage_default_oneof_instance_->welcome_ = const_cast< ::WelcomeMessage*>(&::WelcomeMessage::default_instance());
  FabricWrapperMessage_default_oneof_instance_->patterncommand_ = const_cast< ::PatternCommand*>(&::PatternCommand::default_instance());
}

FabricWrapperMessage::FabricWrapperMessage(const FabricWrapperMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FabricWrapperMessage)
}

void FabricWrapperMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clear_has_msg();
}

FabricWrapperMessage::~FabricWrapperMessage() {
  // @@protoc_insertion_point(destructor:FabricWrapperMessage)
  SharedDtor();
}

void FabricWrapperMessage::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
  if (this != default_instance_) {
  }
}

void FabricWrapperMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FabricWrapperMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FabricWrapperMessage_descriptor_;
}

const FabricWrapperMessage& FabricWrapperMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FabricProtos_2eproto();
  return *default_instance_;
}

FabricWrapperMessage* FabricWrapperMessage::default_instance_ = NULL;

FabricWrapperMessage* FabricWrapperMessage::New(::google::protobuf::Arena* arena) const {
  FabricWrapperMessage* n = new FabricWrapperMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FabricWrapperMessage::clear_msg() {
  switch(msg_case()) {
    case kHeartbeat: {
      delete msg_.heartbeat_;
      break;
    }
    case kPatternNames: {
      delete msg_.patternnames_;
      break;
    }
    case kCommand: {
      delete msg_.command_;
      break;
    }
    case kWelcome: {
      delete msg_.welcome_;
      break;
    }
    case kPatternCommand: {
      delete msg_.patterncommand_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void FabricWrapperMessage::Clear() {
  clear_msg();
}

bool FabricWrapperMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FabricWrapperMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .HeartbeatMessage heartbeat = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heartbeat()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_patternNames;
        break;
      }

      // optional .PatternNamesMessage patternNames = 2;
      case 2: {
        if (tag == 18) {
         parse_patternNames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_patternnames()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_command;
        break;
      }

      // optional .CommandMessage command = 3;
      case 3: {
        if (tag == 26) {
         parse_command:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_command()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_welcome;
        break;
      }

      // optional .WelcomeMessage welcome = 4;
      case 4: {
        if (tag == 34) {
         parse_welcome:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_welcome()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_patternCommand;
        break;
      }

      // optional .PatternCommand patternCommand = 5;
      case 5: {
        if (tag == 42) {
         parse_patternCommand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_patterncommand()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FabricWrapperMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FabricWrapperMessage)
  return false;
#undef DO_
}

void FabricWrapperMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FabricWrapperMessage)
  // optional .HeartbeatMessage heartbeat = 1;
  if (has_heartbeat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *msg_.heartbeat_, output);
  }

  // optional .PatternNamesMessage patternNames = 2;
  if (has_patternnames()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *msg_.patternnames_, output);
  }

  // optional .CommandMessage command = 3;
  if (has_command()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *msg_.command_, output);
  }

  // optional .WelcomeMessage welcome = 4;
  if (has_welcome()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *msg_.welcome_, output);
  }

  // optional .PatternCommand patternCommand = 5;
  if (has_patterncommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *msg_.patterncommand_, output);
  }

  // @@protoc_insertion_point(serialize_end:FabricWrapperMessage)
}

::google::protobuf::uint8* FabricWrapperMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FabricWrapperMessage)
  // optional .HeartbeatMessage heartbeat = 1;
  if (has_heartbeat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *msg_.heartbeat_, target);
  }

  // optional .PatternNamesMessage patternNames = 2;
  if (has_patternnames()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *msg_.patternnames_, target);
  }

  // optional .CommandMessage command = 3;
  if (has_command()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *msg_.command_, target);
  }

  // optional .WelcomeMessage welcome = 4;
  if (has_welcome()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *msg_.welcome_, target);
  }

  // optional .PatternCommand patternCommand = 5;
  if (has_patterncommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *msg_.patterncommand_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:FabricWrapperMessage)
  return target;
}

int FabricWrapperMessage::ByteSize() const {
  int total_size = 0;

  switch (msg_case()) {
    // optional .HeartbeatMessage heartbeat = 1;
    case kHeartbeat: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.heartbeat_);
      break;
    }
    // optional .PatternNamesMessage patternNames = 2;
    case kPatternNames: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.patternnames_);
      break;
    }
    // optional .CommandMessage command = 3;
    case kCommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.command_);
      break;
    }
    // optional .WelcomeMessage welcome = 4;
    case kWelcome: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.welcome_);
      break;
    }
    // optional .PatternCommand patternCommand = 5;
    case kPatternCommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.patterncommand_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FabricWrapperMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FabricWrapperMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FabricWrapperMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FabricWrapperMessage::MergeFrom(const FabricWrapperMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.msg_case()) {
    case kHeartbeat: {
      mutable_heartbeat()->::HeartbeatMessage::MergeFrom(from.heartbeat());
      break;
    }
    case kPatternNames: {
      mutable_patternnames()->::PatternNamesMessage::MergeFrom(from.patternnames());
      break;
    }
    case kCommand: {
      mutable_command()->::CommandMessage::MergeFrom(from.command());
      break;
    }
    case kWelcome: {
      mutable_welcome()->::WelcomeMessage::MergeFrom(from.welcome());
      break;
    }
    case kPatternCommand: {
      mutable_patterncommand()->::PatternCommand::MergeFrom(from.patterncommand());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void FabricWrapperMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FabricWrapperMessage::CopyFrom(const FabricWrapperMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FabricWrapperMessage::IsInitialized() const {

  return true;
}

void FabricWrapperMessage::Swap(FabricWrapperMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FabricWrapperMessage::InternalSwap(FabricWrapperMessage* other) {
  std::swap(msg_, other->msg_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FabricWrapperMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FabricWrapperMessage_descriptor_;
  metadata.reflection = FabricWrapperMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FabricWrapperMessage

// optional .HeartbeatMessage heartbeat = 1;
bool FabricWrapperMessage::has_heartbeat() const {
  return msg_case() == kHeartbeat;
}
void FabricWrapperMessage::set_has_heartbeat() {
  _oneof_case_[0] = kHeartbeat;
}
void FabricWrapperMessage::clear_heartbeat() {
  if (has_heartbeat()) {
    delete msg_.heartbeat_;
    clear_has_msg();
  }
}
 const ::HeartbeatMessage& FabricWrapperMessage::heartbeat() const {
  // @@protoc_insertion_point(field_get:FabricWrapperMessage.heartbeat)
  return has_heartbeat()
      ? *msg_.heartbeat_
      : ::HeartbeatMessage::default_instance();
}
::HeartbeatMessage* FabricWrapperMessage::mutable_heartbeat() {
  if (!has_heartbeat()) {
    clear_msg();
    set_has_heartbeat();
    msg_.heartbeat_ = new ::HeartbeatMessage;
  }
  // @@protoc_insertion_point(field_mutable:FabricWrapperMessage.heartbeat)
  return msg_.heartbeat_;
}
::HeartbeatMessage* FabricWrapperMessage::release_heartbeat() {
  if (has_heartbeat()) {
    clear_has_msg();
    ::HeartbeatMessage* temp = msg_.heartbeat_;
    msg_.heartbeat_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void FabricWrapperMessage::set_allocated_heartbeat(::HeartbeatMessage* heartbeat) {
  clear_msg();
  if (heartbeat) {
    set_has_heartbeat();
    msg_.heartbeat_ = heartbeat;
  }
  // @@protoc_insertion_point(field_set_allocated:FabricWrapperMessage.heartbeat)
}

// optional .PatternNamesMessage patternNames = 2;
bool FabricWrapperMessage::has_patternnames() const {
  return msg_case() == kPatternNames;
}
void FabricWrapperMessage::set_has_patternnames() {
  _oneof_case_[0] = kPatternNames;
}
void FabricWrapperMessage::clear_patternnames() {
  if (has_patternnames()) {
    delete msg_.patternnames_;
    clear_has_msg();
  }
}
 const ::PatternNamesMessage& FabricWrapperMessage::patternnames() const {
  // @@protoc_insertion_point(field_get:FabricWrapperMessage.patternNames)
  return has_patternnames()
      ? *msg_.patternnames_
      : ::PatternNamesMessage::default_instance();
}
::PatternNamesMessage* FabricWrapperMessage::mutable_patternnames() {
  if (!has_patternnames()) {
    clear_msg();
    set_has_patternnames();
    msg_.patternnames_ = new ::PatternNamesMessage;
  }
  // @@protoc_insertion_point(field_mutable:FabricWrapperMessage.patternNames)
  return msg_.patternnames_;
}
::PatternNamesMessage* FabricWrapperMessage::release_patternnames() {
  if (has_patternnames()) {
    clear_has_msg();
    ::PatternNamesMessage* temp = msg_.patternnames_;
    msg_.patternnames_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void FabricWrapperMessage::set_allocated_patternnames(::PatternNamesMessage* patternnames) {
  clear_msg();
  if (patternnames) {
    set_has_patternnames();
    msg_.patternnames_ = patternnames;
  }
  // @@protoc_insertion_point(field_set_allocated:FabricWrapperMessage.patternNames)
}

// optional .CommandMessage command = 3;
bool FabricWrapperMessage::has_command() const {
  return msg_case() == kCommand;
}
void FabricWrapperMessage::set_has_command() {
  _oneof_case_[0] = kCommand;
}
void FabricWrapperMessage::clear_command() {
  if (has_command()) {
    delete msg_.command_;
    clear_has_msg();
  }
}
 const ::CommandMessage& FabricWrapperMessage::command() const {
  // @@protoc_insertion_point(field_get:FabricWrapperMessage.command)
  return has_command()
      ? *msg_.command_
      : ::CommandMessage::default_instance();
}
::CommandMessage* FabricWrapperMessage::mutable_command() {
  if (!has_command()) {
    clear_msg();
    set_has_command();
    msg_.command_ = new ::CommandMessage;
  }
  // @@protoc_insertion_point(field_mutable:FabricWrapperMessage.command)
  return msg_.command_;
}
::CommandMessage* FabricWrapperMessage::release_command() {
  if (has_command()) {
    clear_has_msg();
    ::CommandMessage* temp = msg_.command_;
    msg_.command_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void FabricWrapperMessage::set_allocated_command(::CommandMessage* command) {
  clear_msg();
  if (command) {
    set_has_command();
    msg_.command_ = command;
  }
  // @@protoc_insertion_point(field_set_allocated:FabricWrapperMessage.command)
}

// optional .WelcomeMessage welcome = 4;
bool FabricWrapperMessage::has_welcome() const {
  return msg_case() == kWelcome;
}
void FabricWrapperMessage::set_has_welcome() {
  _oneof_case_[0] = kWelcome;
}
void FabricWrapperMessage::clear_welcome() {
  if (has_welcome()) {
    delete msg_.welcome_;
    clear_has_msg();
  }
}
 const ::WelcomeMessage& FabricWrapperMessage::welcome() const {
  // @@protoc_insertion_point(field_get:FabricWrapperMessage.welcome)
  return has_welcome()
      ? *msg_.welcome_
      : ::WelcomeMessage::default_instance();
}
::WelcomeMessage* FabricWrapperMessage::mutable_welcome() {
  if (!has_welcome()) {
    clear_msg();
    set_has_welcome();
    msg_.welcome_ = new ::WelcomeMessage;
  }
  // @@protoc_insertion_point(field_mutable:FabricWrapperMessage.welcome)
  return msg_.welcome_;
}
::WelcomeMessage* FabricWrapperMessage::release_welcome() {
  if (has_welcome()) {
    clear_has_msg();
    ::WelcomeMessage* temp = msg_.welcome_;
    msg_.welcome_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void FabricWrapperMessage::set_allocated_welcome(::WelcomeMessage* welcome) {
  clear_msg();
  if (welcome) {
    set_has_welcome();
    msg_.welcome_ = welcome;
  }
  // @@protoc_insertion_point(field_set_allocated:FabricWrapperMessage.welcome)
}

// optional .PatternCommand patternCommand = 5;
bool FabricWrapperMessage::has_patterncommand() const {
  return msg_case() == kPatternCommand;
}
void FabricWrapperMessage::set_has_patterncommand() {
  _oneof_case_[0] = kPatternCommand;
}
void FabricWrapperMessage::clear_patterncommand() {
  if (has_patterncommand()) {
    delete msg_.patterncommand_;
    clear_has_msg();
  }
}
 const ::PatternCommand& FabricWrapperMessage::patterncommand() const {
  // @@protoc_insertion_point(field_get:FabricWrapperMessage.patternCommand)
  return has_patterncommand()
      ? *msg_.patterncommand_
      : ::PatternCommand::default_instance();
}
::PatternCommand* FabricWrapperMessage::mutable_patterncommand() {
  if (!has_patterncommand()) {
    clear_msg();
    set_has_patterncommand();
    msg_.patterncommand_ = new ::PatternCommand;
  }
  // @@protoc_insertion_point(field_mutable:FabricWrapperMessage.patternCommand)
  return msg_.patterncommand_;
}
::PatternCommand* FabricWrapperMessage::release_patterncommand() {
  if (has_patterncommand()) {
    clear_has_msg();
    ::PatternCommand* temp = msg_.patterncommand_;
    msg_.patterncommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void FabricWrapperMessage::set_allocated_patterncommand(::PatternCommand* patterncommand) {
  clear_msg();
  if (patterncommand) {
    set_has_patterncommand();
    msg_.patterncommand_ = patterncommand;
  }
  // @@protoc_insertion_point(field_set_allocated:FabricWrapperMessage.patternCommand)
}

bool FabricWrapperMessage::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
void FabricWrapperMessage::clear_has_msg() {
  _oneof_case_[0] = MSG_NOT_SET;
}
FabricWrapperMessage::MsgCase FabricWrapperMessage::msg_case() const {
  return FabricWrapperMessage::MsgCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* HeartbeatMessage_MemberType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartbeatMessage_MemberType_descriptor_;
}
bool HeartbeatMessage_MemberType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HeartbeatMessage_MemberType HeartbeatMessage::PROTOBUF_UNKNOWN;
const HeartbeatMessage_MemberType HeartbeatMessage::PROTOBUF_VEST;
const HeartbeatMessage_MemberType HeartbeatMessage::PROTOBUF_HAT;
const HeartbeatMessage_MemberType HeartbeatMessage::PROTOBUF_TOWER;
const HeartbeatMessage_MemberType HeartbeatMessage::PROTOBUF_TOWN_CENTER;
const HeartbeatMessage_MemberType HeartbeatMessage::PROTOBUF_TOWER_EYE;
const HeartbeatMessage_MemberType HeartbeatMessage::PROTOBUF_DRESS;
const HeartbeatMessage_MemberType HeartbeatMessage::PROTOBUF_WINDFLOWERS;
const HeartbeatMessage_MemberType HeartbeatMessage::PROTOBUF_REEDS;
const HeartbeatMessage_MemberType HeartbeatMessage::MemberType_MIN;
const HeartbeatMessage_MemberType HeartbeatMessage::MemberType_MAX;
const int HeartbeatMessage::MemberType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatMessage::kMessageTypeIDFieldNumber;
const int HeartbeatMessage::kVersionIDFieldNumber;
const int HeartbeatMessage::kCurrentPatternFieldNumber;
const int HeartbeatMessage::kRedFieldNumber;
const int HeartbeatMessage::kGreenFieldNumber;
const int HeartbeatMessage::kBlueFieldNumber;
const int HeartbeatMessage::kSpeedFieldNumber;
const int HeartbeatMessage::kIntensityFieldNumber;
const int HeartbeatMessage::kMemberTypeFieldNumber;
const int HeartbeatMessage::kCurrentPatternNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatMessage::HeartbeatMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HeartbeatMessage)
}

void HeartbeatMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HeartbeatMessage::HeartbeatMessage(const HeartbeatMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HeartbeatMessage)
}

void HeartbeatMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  messagetypeid_ = 0;
  versionid_ = 0;
  currentpattern_ = 0;
  red_ = 0;
  green_ = 0;
  blue_ = 0;
  speed_ = 0;
  intensity_ = 0;
  membertype_ = 0;
  currentpatternname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HeartbeatMessage::~HeartbeatMessage() {
  // @@protoc_insertion_point(destructor:HeartbeatMessage)
  SharedDtor();
}

void HeartbeatMessage::SharedDtor() {
  currentpatternname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HeartbeatMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartbeatMessage_descriptor_;
}

const HeartbeatMessage& HeartbeatMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FabricProtos_2eproto();
  return *default_instance_;
}

HeartbeatMessage* HeartbeatMessage::default_instance_ = NULL;

HeartbeatMessage* HeartbeatMessage::New(::google::protobuf::Arena* arena) const {
  HeartbeatMessage* n = new HeartbeatMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatMessage::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HeartbeatMessage*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(messagetypeid_, intensity_);
  membertype_ = 0;
  currentpatternname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool HeartbeatMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HeartbeatMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 messageTypeID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &messagetypeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_versionID;
        break;
      }

      // optional int32 versionID = 2;
      case 2: {
        if (tag == 16) {
         parse_versionID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &versionid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_currentPattern;
        break;
      }

      // optional int32 currentPattern = 3;
      case 3: {
        if (tag == 24) {
         parse_currentPattern:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currentpattern_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_red;
        break;
      }

      // optional int32 red = 4;
      case 4: {
        if (tag == 32) {
         parse_red:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &red_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_green;
        break;
      }

      // optional int32 green = 5;
      case 5: {
        if (tag == 40) {
         parse_green:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &green_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_blue;
        break;
      }

      // optional int32 blue = 6;
      case 6: {
        if (tag == 48) {
         parse_blue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_speed;
        break;
      }

      // optional int32 speed = 7;
      case 7: {
        if (tag == 56) {
         parse_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_intensity;
        break;
      }

      // optional int32 intensity = 8;
      case 8: {
        if (tag == 64) {
         parse_intensity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intensity_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_memberType;
        break;
      }

      // optional int32 memberType = 9;
      case 9: {
        if (tag == 72) {
         parse_memberType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &membertype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_currentPatternName;
        break;
      }

      // optional string currentPatternName = 10;
      case 10: {
        if (tag == 82) {
         parse_currentPatternName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currentpatternname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currentpatternname().data(), this->currentpatternname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HeartbeatMessage.currentPatternName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HeartbeatMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HeartbeatMessage)
  return false;
#undef DO_
}

void HeartbeatMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HeartbeatMessage)
  // optional int32 messageTypeID = 1;
  if (this->messagetypeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->messagetypeid(), output);
  }

  // optional int32 versionID = 2;
  if (this->versionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->versionid(), output);
  }

  // optional int32 currentPattern = 3;
  if (this->currentpattern() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->currentpattern(), output);
  }

  // optional int32 red = 4;
  if (this->red() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->red(), output);
  }

  // optional int32 green = 5;
  if (this->green() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->green(), output);
  }

  // optional int32 blue = 6;
  if (this->blue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->blue(), output);
  }

  // optional int32 speed = 7;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->speed(), output);
  }

  // optional int32 intensity = 8;
  if (this->intensity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->intensity(), output);
  }

  // optional int32 memberType = 9;
  if (this->membertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->membertype(), output);
  }

  // optional string currentPatternName = 10;
  if (this->currentpatternname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currentpatternname().data(), this->currentpatternname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HeartbeatMessage.currentPatternName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->currentpatternname(), output);
  }

  // @@protoc_insertion_point(serialize_end:HeartbeatMessage)
}

::google::protobuf::uint8* HeartbeatMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HeartbeatMessage)
  // optional int32 messageTypeID = 1;
  if (this->messagetypeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->messagetypeid(), target);
  }

  // optional int32 versionID = 2;
  if (this->versionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->versionid(), target);
  }

  // optional int32 currentPattern = 3;
  if (this->currentpattern() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->currentpattern(), target);
  }

  // optional int32 red = 4;
  if (this->red() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->red(), target);
  }

  // optional int32 green = 5;
  if (this->green() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->green(), target);
  }

  // optional int32 blue = 6;
  if (this->blue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->blue(), target);
  }

  // optional int32 speed = 7;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->speed(), target);
  }

  // optional int32 intensity = 8;
  if (this->intensity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->intensity(), target);
  }

  // optional int32 memberType = 9;
  if (this->membertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->membertype(), target);
  }

  // optional string currentPatternName = 10;
  if (this->currentpatternname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currentpatternname().data(), this->currentpatternname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HeartbeatMessage.currentPatternName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->currentpatternname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:HeartbeatMessage)
  return target;
}

int HeartbeatMessage::ByteSize() const {
  int total_size = 0;

  // optional int32 messageTypeID = 1;
  if (this->messagetypeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->messagetypeid());
  }

  // optional int32 versionID = 2;
  if (this->versionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->versionid());
  }

  // optional int32 currentPattern = 3;
  if (this->currentpattern() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->currentpattern());
  }

  // optional int32 red = 4;
  if (this->red() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->red());
  }

  // optional int32 green = 5;
  if (this->green() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->green());
  }

  // optional int32 blue = 6;
  if (this->blue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blue());
  }

  // optional int32 speed = 7;
  if (this->speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->speed());
  }

  // optional int32 intensity = 8;
  if (this->intensity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intensity());
  }

  // optional int32 memberType = 9;
  if (this->membertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->membertype());
  }

  // optional string currentPatternName = 10;
  if (this->currentpatternname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currentpatternname());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HeartbeatMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeartbeatMessage::MergeFrom(const HeartbeatMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.messagetypeid() != 0) {
    set_messagetypeid(from.messagetypeid());
  }
  if (from.versionid() != 0) {
    set_versionid(from.versionid());
  }
  if (from.currentpattern() != 0) {
    set_currentpattern(from.currentpattern());
  }
  if (from.red() != 0) {
    set_red(from.red());
  }
  if (from.green() != 0) {
    set_green(from.green());
  }
  if (from.blue() != 0) {
    set_blue(from.blue());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.intensity() != 0) {
    set_intensity(from.intensity());
  }
  if (from.membertype() != 0) {
    set_membertype(from.membertype());
  }
  if (from.currentpatternname().size() > 0) {

    currentpatternname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currentpatternname_);
  }
}

void HeartbeatMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatMessage::CopyFrom(const HeartbeatMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatMessage::IsInitialized() const {

  return true;
}

void HeartbeatMessage::Swap(HeartbeatMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatMessage::InternalSwap(HeartbeatMessage* other) {
  std::swap(messagetypeid_, other->messagetypeid_);
  std::swap(versionid_, other->versionid_);
  std::swap(currentpattern_, other->currentpattern_);
  std::swap(red_, other->red_);
  std::swap(green_, other->green_);
  std::swap(blue_, other->blue_);
  std::swap(speed_, other->speed_);
  std::swap(intensity_, other->intensity_);
  std::swap(membertype_, other->membertype_);
  currentpatternname_.Swap(&other->currentpatternname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartbeatMessage_descriptor_;
  metadata.reflection = HeartbeatMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatMessage

// optional int32 messageTypeID = 1;
void HeartbeatMessage::clear_messagetypeid() {
  messagetypeid_ = 0;
}
 ::google::protobuf::int32 HeartbeatMessage::messagetypeid() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.messageTypeID)
  return messagetypeid_;
}
 void HeartbeatMessage::set_messagetypeid(::google::protobuf::int32 value) {
  
  messagetypeid_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.messageTypeID)
}

// optional int32 versionID = 2;
void HeartbeatMessage::clear_versionid() {
  versionid_ = 0;
}
 ::google::protobuf::int32 HeartbeatMessage::versionid() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.versionID)
  return versionid_;
}
 void HeartbeatMessage::set_versionid(::google::protobuf::int32 value) {
  
  versionid_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.versionID)
}

// optional int32 currentPattern = 3;
void HeartbeatMessage::clear_currentpattern() {
  currentpattern_ = 0;
}
 ::google::protobuf::int32 HeartbeatMessage::currentpattern() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.currentPattern)
  return currentpattern_;
}
 void HeartbeatMessage::set_currentpattern(::google::protobuf::int32 value) {
  
  currentpattern_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.currentPattern)
}

// optional int32 red = 4;
void HeartbeatMessage::clear_red() {
  red_ = 0;
}
 ::google::protobuf::int32 HeartbeatMessage::red() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.red)
  return red_;
}
 void HeartbeatMessage::set_red(::google::protobuf::int32 value) {
  
  red_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.red)
}

// optional int32 green = 5;
void HeartbeatMessage::clear_green() {
  green_ = 0;
}
 ::google::protobuf::int32 HeartbeatMessage::green() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.green)
  return green_;
}
 void HeartbeatMessage::set_green(::google::protobuf::int32 value) {
  
  green_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.green)
}

// optional int32 blue = 6;
void HeartbeatMessage::clear_blue() {
  blue_ = 0;
}
 ::google::protobuf::int32 HeartbeatMessage::blue() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.blue)
  return blue_;
}
 void HeartbeatMessage::set_blue(::google::protobuf::int32 value) {
  
  blue_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.blue)
}

// optional int32 speed = 7;
void HeartbeatMessage::clear_speed() {
  speed_ = 0;
}
 ::google::protobuf::int32 HeartbeatMessage::speed() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.speed)
  return speed_;
}
 void HeartbeatMessage::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.speed)
}

// optional int32 intensity = 8;
void HeartbeatMessage::clear_intensity() {
  intensity_ = 0;
}
 ::google::protobuf::int32 HeartbeatMessage::intensity() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.intensity)
  return intensity_;
}
 void HeartbeatMessage::set_intensity(::google::protobuf::int32 value) {
  
  intensity_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.intensity)
}

// optional int32 memberType = 9;
void HeartbeatMessage::clear_membertype() {
  membertype_ = 0;
}
 ::google::protobuf::int32 HeartbeatMessage::membertype() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.memberType)
  return membertype_;
}
 void HeartbeatMessage::set_membertype(::google::protobuf::int32 value) {
  
  membertype_ = value;
  // @@protoc_insertion_point(field_set:HeartbeatMessage.memberType)
}

// optional string currentPatternName = 10;
void HeartbeatMessage::clear_currentpatternname() {
  currentpatternname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HeartbeatMessage::currentpatternname() const {
  // @@protoc_insertion_point(field_get:HeartbeatMessage.currentPatternName)
  return currentpatternname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HeartbeatMessage::set_currentpatternname(const ::std::string& value) {
  
  currentpatternname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HeartbeatMessage.currentPatternName)
}
 void HeartbeatMessage::set_currentpatternname(const char* value) {
  
  currentpatternname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HeartbeatMessage.currentPatternName)
}
 void HeartbeatMessage::set_currentpatternname(const char* value, size_t size) {
  
  currentpatternname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HeartbeatMessage.currentPatternName)
}
 ::std::string* HeartbeatMessage::mutable_currentpatternname() {
  
  // @@protoc_insertion_point(field_mutable:HeartbeatMessage.currentPatternName)
  return currentpatternname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HeartbeatMessage::release_currentpatternname() {
  
  return currentpatternname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HeartbeatMessage::set_allocated_currentpatternname(::std::string* currentpatternname) {
  if (currentpatternname != NULL) {
    
  } else {
    
  }
  currentpatternname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currentpatternname);
  // @@protoc_insertion_point(field_set_allocated:HeartbeatMessage.currentPatternName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PatternNamesMessage::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PatternNamesMessage::PatternNamesMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PatternNamesMessage)
}

void PatternNamesMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PatternNamesMessage::PatternNamesMessage(const PatternNamesMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PatternNamesMessage)
}

void PatternNamesMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

PatternNamesMessage::~PatternNamesMessage() {
  // @@protoc_insertion_point(destructor:PatternNamesMessage)
  SharedDtor();
}

void PatternNamesMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PatternNamesMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PatternNamesMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PatternNamesMessage_descriptor_;
}

const PatternNamesMessage& PatternNamesMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FabricProtos_2eproto();
  return *default_instance_;
}

PatternNamesMessage* PatternNamesMessage::default_instance_ = NULL;

PatternNamesMessage* PatternNamesMessage::New(::google::protobuf::Arena* arena) const {
  PatternNamesMessage* n = new PatternNamesMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PatternNamesMessage::Clear() {
  name_.Clear();
}

bool PatternNamesMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PatternNamesMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string name = 1;
      case 1: {
        if (tag == 10) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name(this->name_size() - 1).data(),
            this->name(this->name_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PatternNamesMessage.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_name;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PatternNamesMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PatternNamesMessage)
  return false;
#undef DO_
}

void PatternNamesMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PatternNamesMessage)
  // repeated string name = 1;
  for (int i = 0; i < this->name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name(i).data(), this->name(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PatternNamesMessage.name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PatternNamesMessage)
}

::google::protobuf::uint8* PatternNamesMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PatternNamesMessage)
  // repeated string name = 1;
  for (int i = 0; i < this->name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name(i).data(), this->name(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PatternNamesMessage.name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->name(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PatternNamesMessage)
  return target;
}

int PatternNamesMessage::ByteSize() const {
  int total_size = 0;

  // repeated string name = 1;
  total_size += 1 * this->name_size();
  for (int i = 0; i < this->name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PatternNamesMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PatternNamesMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PatternNamesMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PatternNamesMessage::MergeFrom(const PatternNamesMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  name_.MergeFrom(from.name_);
}

void PatternNamesMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PatternNamesMessage::CopyFrom(const PatternNamesMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PatternNamesMessage::IsInitialized() const {

  return true;
}

void PatternNamesMessage::Swap(PatternNamesMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PatternNamesMessage::InternalSwap(PatternNamesMessage* other) {
  name_.UnsafeArenaSwap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PatternNamesMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PatternNamesMessage_descriptor_;
  metadata.reflection = PatternNamesMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PatternNamesMessage

// repeated string name = 1;
int PatternNamesMessage::name_size() const {
  return name_.size();
}
void PatternNamesMessage::clear_name() {
  name_.Clear();
}
 const ::std::string& PatternNamesMessage::name(int index) const {
  // @@protoc_insertion_point(field_get:PatternNamesMessage.name)
  return name_.Get(index);
}
 ::std::string* PatternNamesMessage::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:PatternNamesMessage.name)
  return name_.Mutable(index);
}
 void PatternNamesMessage::set_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PatternNamesMessage.name)
  name_.Mutable(index)->assign(value);
}
 void PatternNamesMessage::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PatternNamesMessage.name)
}
 void PatternNamesMessage::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PatternNamesMessage.name)
}
 ::std::string* PatternNamesMessage::add_name() {
  return name_.Add();
}
 void PatternNamesMessage::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PatternNamesMessage.name)
}
 void PatternNamesMessage::add_name(const char* value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PatternNamesMessage.name)
}
 void PatternNamesMessage::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PatternNamesMessage.name)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
PatternNamesMessage::name() const {
  // @@protoc_insertion_point(field_list:PatternNamesMessage.name)
  return name_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
PatternNamesMessage::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:PatternNamesMessage.name)
  return &name_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PatternCommand::kPatternNumberFieldNumber;
const int PatternCommand::kSpeedFieldNumber;
const int PatternCommand::kIntensityFieldNumber;
const int PatternCommand::kRedFieldNumber;
const int PatternCommand::kGreenFieldNumber;
const int PatternCommand::kBlueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PatternCommand::PatternCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PatternCommand)
}

void PatternCommand::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PatternCommand::PatternCommand(const PatternCommand& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PatternCommand)
}

void PatternCommand::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  patternnumber_ = 0;
  speed_ = 0;
  intensity_ = 0;
  red_ = 0;
  green_ = 0;
  blue_ = 0;
}

PatternCommand::~PatternCommand() {
  // @@protoc_insertion_point(destructor:PatternCommand)
  SharedDtor();
}

void PatternCommand::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PatternCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PatternCommand::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PatternCommand_descriptor_;
}

const PatternCommand& PatternCommand::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FabricProtos_2eproto();
  return *default_instance_;
}

PatternCommand* PatternCommand::default_instance_ = NULL;

PatternCommand* PatternCommand::New(::google::protobuf::Arena* arena) const {
  PatternCommand* n = new PatternCommand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PatternCommand::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PatternCommand*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(patternnumber_, blue_);

#undef ZR_HELPER_
#undef ZR_

}

bool PatternCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PatternCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 patternNumber = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &patternnumber_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_speed;
        break;
      }

      // optional int32 speed = 2;
      case 2: {
        if (tag == 16) {
         parse_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_intensity;
        break;
      }

      // optional int32 intensity = 3;
      case 3: {
        if (tag == 24) {
         parse_intensity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intensity_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_red;
        break;
      }

      // optional int32 red = 4;
      case 4: {
        if (tag == 32) {
         parse_red:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &red_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_green;
        break;
      }

      // optional int32 green = 5;
      case 5: {
        if (tag == 40) {
         parse_green:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &green_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_blue;
        break;
      }

      // optional int32 blue = 6;
      case 6: {
        if (tag == 48) {
         parse_blue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PatternCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PatternCommand)
  return false;
#undef DO_
}

void PatternCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PatternCommand)
  // optional int32 patternNumber = 1;
  if (this->patternnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->patternnumber(), output);
  }

  // optional int32 speed = 2;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->speed(), output);
  }

  // optional int32 intensity = 3;
  if (this->intensity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->intensity(), output);
  }

  // optional int32 red = 4;
  if (this->red() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->red(), output);
  }

  // optional int32 green = 5;
  if (this->green() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->green(), output);
  }

  // optional int32 blue = 6;
  if (this->blue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->blue(), output);
  }

  // @@protoc_insertion_point(serialize_end:PatternCommand)
}

::google::protobuf::uint8* PatternCommand::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PatternCommand)
  // optional int32 patternNumber = 1;
  if (this->patternnumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->patternnumber(), target);
  }

  // optional int32 speed = 2;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->speed(), target);
  }

  // optional int32 intensity = 3;
  if (this->intensity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->intensity(), target);
  }

  // optional int32 red = 4;
  if (this->red() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->red(), target);
  }

  // optional int32 green = 5;
  if (this->green() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->green(), target);
  }

  // optional int32 blue = 6;
  if (this->blue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->blue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PatternCommand)
  return target;
}

int PatternCommand::ByteSize() const {
  int total_size = 0;

  // optional int32 patternNumber = 1;
  if (this->patternnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->patternnumber());
  }

  // optional int32 speed = 2;
  if (this->speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->speed());
  }

  // optional int32 intensity = 3;
  if (this->intensity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intensity());
  }

  // optional int32 red = 4;
  if (this->red() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->red());
  }

  // optional int32 green = 5;
  if (this->green() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->green());
  }

  // optional int32 blue = 6;
  if (this->blue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blue());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PatternCommand::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PatternCommand* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PatternCommand>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PatternCommand::MergeFrom(const PatternCommand& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.patternnumber() != 0) {
    set_patternnumber(from.patternnumber());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.intensity() != 0) {
    set_intensity(from.intensity());
  }
  if (from.red() != 0) {
    set_red(from.red());
  }
  if (from.green() != 0) {
    set_green(from.green());
  }
  if (from.blue() != 0) {
    set_blue(from.blue());
  }
}

void PatternCommand::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PatternCommand::CopyFrom(const PatternCommand& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PatternCommand::IsInitialized() const {

  return true;
}

void PatternCommand::Swap(PatternCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PatternCommand::InternalSwap(PatternCommand* other) {
  std::swap(patternnumber_, other->patternnumber_);
  std::swap(speed_, other->speed_);
  std::swap(intensity_, other->intensity_);
  std::swap(red_, other->red_);
  std::swap(green_, other->green_);
  std::swap(blue_, other->blue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PatternCommand::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PatternCommand_descriptor_;
  metadata.reflection = PatternCommand_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PatternCommand

// optional int32 patternNumber = 1;
void PatternCommand::clear_patternnumber() {
  patternnumber_ = 0;
}
 ::google::protobuf::int32 PatternCommand::patternnumber() const {
  // @@protoc_insertion_point(field_get:PatternCommand.patternNumber)
  return patternnumber_;
}
 void PatternCommand::set_patternnumber(::google::protobuf::int32 value) {
  
  patternnumber_ = value;
  // @@protoc_insertion_point(field_set:PatternCommand.patternNumber)
}

// optional int32 speed = 2;
void PatternCommand::clear_speed() {
  speed_ = 0;
}
 ::google::protobuf::int32 PatternCommand::speed() const {
  // @@protoc_insertion_point(field_get:PatternCommand.speed)
  return speed_;
}
 void PatternCommand::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:PatternCommand.speed)
}

// optional int32 intensity = 3;
void PatternCommand::clear_intensity() {
  intensity_ = 0;
}
 ::google::protobuf::int32 PatternCommand::intensity() const {
  // @@protoc_insertion_point(field_get:PatternCommand.intensity)
  return intensity_;
}
 void PatternCommand::set_intensity(::google::protobuf::int32 value) {
  
  intensity_ = value;
  // @@protoc_insertion_point(field_set:PatternCommand.intensity)
}

// optional int32 red = 4;
void PatternCommand::clear_red() {
  red_ = 0;
}
 ::google::protobuf::int32 PatternCommand::red() const {
  // @@protoc_insertion_point(field_get:PatternCommand.red)
  return red_;
}
 void PatternCommand::set_red(::google::protobuf::int32 value) {
  
  red_ = value;
  // @@protoc_insertion_point(field_set:PatternCommand.red)
}

// optional int32 green = 5;
void PatternCommand::clear_green() {
  green_ = 0;
}
 ::google::protobuf::int32 PatternCommand::green() const {
  // @@protoc_insertion_point(field_get:PatternCommand.green)
  return green_;
}
 void PatternCommand::set_green(::google::protobuf::int32 value) {
  
  green_ = value;
  // @@protoc_insertion_point(field_set:PatternCommand.green)
}

// optional int32 blue = 6;
void PatternCommand::clear_blue() {
  blue_ = 0;
}
 ::google::protobuf::int32 PatternCommand::blue() const {
  // @@protoc_insertion_point(field_get:PatternCommand.blue)
  return blue_;
}
 void PatternCommand::set_blue(::google::protobuf::int32 value) {
  
  blue_ = value;
  // @@protoc_insertion_point(field_set:PatternCommand.blue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* CommandMessage_CommandList_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommandMessage_CommandList_descriptor_;
}
bool CommandMessage_CommandList_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CommandMessage_CommandList CommandMessage::PROTOBUF_HEARTBEAT;
const CommandMessage_CommandList CommandMessage::PROTOBUF_PATTERN_NAMES;
const CommandMessage_CommandList CommandMessage::PROTOBUF_PATTERN_COMMAND;
const CommandMessage_CommandList CommandMessage::CommandList_MIN;
const CommandMessage_CommandList CommandMessage::CommandList_MAX;
const int CommandMessage::CommandList_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommandMessage::kCommandFieldNumber;
const int CommandMessage::kPatternCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommandMessage::CommandMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommandMessage)
}

void CommandMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  patterncommand_ = const_cast< ::PatternCommand*>(&::PatternCommand::default_instance());
}

CommandMessage::CommandMessage(const CommandMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CommandMessage)
}

void CommandMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  command_ = 0;
  patterncommand_ = NULL;
}

CommandMessage::~CommandMessage() {
  // @@protoc_insertion_point(destructor:CommandMessage)
  SharedDtor();
}

void CommandMessage::SharedDtor() {
  if (this != default_instance_) {
    delete patterncommand_;
  }
}

void CommandMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommandMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommandMessage_descriptor_;
}

const CommandMessage& CommandMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FabricProtos_2eproto();
  return *default_instance_;
}

CommandMessage* CommandMessage::default_instance_ = NULL;

CommandMessage* CommandMessage::New(::google::protobuf::Arena* arena) const {
  CommandMessage* n = new CommandMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommandMessage::Clear() {
  command_ = 0;
  if (GetArenaNoVirtual() == NULL && patterncommand_ != NULL) delete patterncommand_;
  patterncommand_ = NULL;
}

bool CommandMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommandMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CommandMessage.CommandList command = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_command(static_cast< ::CommandMessage_CommandList >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_patternCommand;
        break;
      }

      // optional .PatternCommand patternCommand = 2;
      case 2: {
        if (tag == 18) {
         parse_patternCommand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_patterncommand()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommandMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommandMessage)
  return false;
#undef DO_
}

void CommandMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommandMessage)
  // optional .CommandMessage.CommandList command = 1;
  if (this->command() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->command(), output);
  }

  // optional .PatternCommand patternCommand = 2;
  if (this->has_patterncommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->patterncommand_, output);
  }

  // @@protoc_insertion_point(serialize_end:CommandMessage)
}

::google::protobuf::uint8* CommandMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CommandMessage)
  // optional .CommandMessage.CommandList command = 1;
  if (this->command() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->command(), target);
  }

  // optional .PatternCommand patternCommand = 2;
  if (this->has_patterncommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->patterncommand_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CommandMessage)
  return target;
}

int CommandMessage::ByteSize() const {
  int total_size = 0;

  // optional .CommandMessage.CommandList command = 1;
  if (this->command() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command());
  }

  // optional .PatternCommand patternCommand = 2;
  if (this->has_patterncommand()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->patterncommand_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommandMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CommandMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CommandMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CommandMessage::MergeFrom(const CommandMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.command() != 0) {
    set_command(from.command());
  }
  if (from.has_patterncommand()) {
    mutable_patterncommand()->::PatternCommand::MergeFrom(from.patterncommand());
  }
}

void CommandMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandMessage::CopyFrom(const CommandMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandMessage::IsInitialized() const {

  return true;
}

void CommandMessage::Swap(CommandMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommandMessage::InternalSwap(CommandMessage* other) {
  std::swap(command_, other->command_);
  std::swap(patterncommand_, other->patterncommand_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommandMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommandMessage_descriptor_;
  metadata.reflection = CommandMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommandMessage

// optional .CommandMessage.CommandList command = 1;
void CommandMessage::clear_command() {
  command_ = 0;
}
 ::CommandMessage_CommandList CommandMessage::command() const {
  // @@protoc_insertion_point(field_get:CommandMessage.command)
  return static_cast< ::CommandMessage_CommandList >(command_);
}
 void CommandMessage::set_command(::CommandMessage_CommandList value) {
  
  command_ = value;
  // @@protoc_insertion_point(field_set:CommandMessage.command)
}

// optional .PatternCommand patternCommand = 2;
bool CommandMessage::has_patterncommand() const {
  return !_is_default_instance_ && patterncommand_ != NULL;
}
void CommandMessage::clear_patterncommand() {
  if (GetArenaNoVirtual() == NULL && patterncommand_ != NULL) delete patterncommand_;
  patterncommand_ = NULL;
}
const ::PatternCommand& CommandMessage::patterncommand() const {
  // @@protoc_insertion_point(field_get:CommandMessage.patternCommand)
  return patterncommand_ != NULL ? *patterncommand_ : *default_instance_->patterncommand_;
}
::PatternCommand* CommandMessage::mutable_patterncommand() {
  
  if (patterncommand_ == NULL) {
    patterncommand_ = new ::PatternCommand;
  }
  // @@protoc_insertion_point(field_mutable:CommandMessage.patternCommand)
  return patterncommand_;
}
::PatternCommand* CommandMessage::release_patterncommand() {
  
  ::PatternCommand* temp = patterncommand_;
  patterncommand_ = NULL;
  return temp;
}
void CommandMessage::set_allocated_patterncommand(::PatternCommand* patterncommand) {
  delete patterncommand_;
  patterncommand_ = patterncommand;
  if (patterncommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CommandMessage.patternCommand)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WelcomeMessage::kBuildTimeFieldNumber;
const int WelcomeMessage::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WelcomeMessage::WelcomeMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WelcomeMessage)
}

void WelcomeMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

WelcomeMessage::WelcomeMessage(const WelcomeMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WelcomeMessage)
}

void WelcomeMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  buildtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WelcomeMessage::~WelcomeMessage() {
  // @@protoc_insertion_point(destructor:WelcomeMessage)
  SharedDtor();
}

void WelcomeMessage::SharedDtor() {
  buildtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void WelcomeMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelcomeMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelcomeMessage_descriptor_;
}

const WelcomeMessage& WelcomeMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_FabricProtos_2eproto();
  return *default_instance_;
}

WelcomeMessage* WelcomeMessage::default_instance_ = NULL;

WelcomeMessage* WelcomeMessage::New(::google::protobuf::Arena* arena) const {
  WelcomeMessage* n = new WelcomeMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WelcomeMessage::Clear() {
  buildtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool WelcomeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WelcomeMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string buildTime = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buildtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buildtime().data(), this->buildtime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WelcomeMessage.buildTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_version;
        break;
      }

      // optional string version = 2;
      case 2: {
        if (tag == 18) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "WelcomeMessage.version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WelcomeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WelcomeMessage)
  return false;
#undef DO_
}

void WelcomeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WelcomeMessage)
  // optional string buildTime = 1;
  if (this->buildtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buildtime().data(), this->buildtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WelcomeMessage.buildTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->buildtime(), output);
  }

  // optional string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WelcomeMessage.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // @@protoc_insertion_point(serialize_end:WelcomeMessage)
}

::google::protobuf::uint8* WelcomeMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WelcomeMessage)
  // optional string buildTime = 1;
  if (this->buildtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buildtime().data(), this->buildtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WelcomeMessage.buildTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->buildtime(), target);
  }

  // optional string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "WelcomeMessage.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:WelcomeMessage)
  return target;
}

int WelcomeMessage::ByteSize() const {
  int total_size = 0;

  // optional string buildTime = 1;
  if (this->buildtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buildtime());
  }

  // optional string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelcomeMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WelcomeMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WelcomeMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WelcomeMessage::MergeFrom(const WelcomeMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.buildtime().size() > 0) {

    buildtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buildtime_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void WelcomeMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelcomeMessage::CopyFrom(const WelcomeMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelcomeMessage::IsInitialized() const {

  return true;
}

void WelcomeMessage::Swap(WelcomeMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WelcomeMessage::InternalSwap(WelcomeMessage* other) {
  buildtime_.Swap(&other->buildtime_);
  version_.Swap(&other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WelcomeMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelcomeMessage_descriptor_;
  metadata.reflection = WelcomeMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WelcomeMessage

// optional string buildTime = 1;
void WelcomeMessage::clear_buildtime() {
  buildtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WelcomeMessage::buildtime() const {
  // @@protoc_insertion_point(field_get:WelcomeMessage.buildTime)
  return buildtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WelcomeMessage::set_buildtime(const ::std::string& value) {
  
  buildtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WelcomeMessage.buildTime)
}
 void WelcomeMessage::set_buildtime(const char* value) {
  
  buildtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WelcomeMessage.buildTime)
}
 void WelcomeMessage::set_buildtime(const char* value, size_t size) {
  
  buildtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WelcomeMessage.buildTime)
}
 ::std::string* WelcomeMessage::mutable_buildtime() {
  
  // @@protoc_insertion_point(field_mutable:WelcomeMessage.buildTime)
  return buildtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WelcomeMessage::release_buildtime() {
  
  return buildtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WelcomeMessage::set_allocated_buildtime(::std::string* buildtime) {
  if (buildtime != NULL) {
    
  } else {
    
  }
  buildtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buildtime);
  // @@protoc_insertion_point(field_set_allocated:WelcomeMessage.buildTime)
}

// optional string version = 2;
void WelcomeMessage::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& WelcomeMessage::version() const {
  // @@protoc_insertion_point(field_get:WelcomeMessage.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WelcomeMessage::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WelcomeMessage.version)
}
 void WelcomeMessage::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WelcomeMessage.version)
}
 void WelcomeMessage::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WelcomeMessage.version)
}
 ::std::string* WelcomeMessage::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:WelcomeMessage.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WelcomeMessage::release_version() {
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WelcomeMessage::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:WelcomeMessage.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
